## Scripts and Commands in django shell to populate database ##

## 1. Populate City data 

import pandas as pd 
from temp.models import City 

df = pd.read_csv('./maps_data/cities.csv')
df = df.astype({'code':str})

for data in df.itertuples():
    City.objects.create(
        name=data[3],
        latitude=data[4],
        longitude=data[5],
        code=data[1]
    )


## 2. Enter XML Data from downloaded files (Input manually , since scheduler app is not yet ready)
import pandas as pd 
from temp.models import Temp 
from bs4 import BeautifulSoup
from datetime import datetime
from temp.models import City 


def get_temp_hum_data(area,index,target_date): 
    my_dict = {}
    my_dict['tmax'] = area.select(f'parameter[id="tmax"] timerange[day="{target_date}"] value[unit="C"]')[0].text
    my_dict['tmin'] = area.select(f'parameter[id="tmin"] timerange[day="{target_date}"] value[unit="C"]')[0].text
    my_dict['humax'] = area.select(f'parameter[id="humax"] timerange[day="{target_date}"] value')[0].text
    my_dict['humin'] = area.select(f'parameter[id="humin"] timerange[day="{target_date}"] value')[0].text
    df = pd.DataFrame(my_dict,index=[index])
    return df 

def get_area_detail(area,index,target_date): 
    area_dict = {}
    attributes = area.attrs
    area_dict['date'] = target_date
    area_dict['id'] = attributes.get('id')
    area_dict['name']=area.select('name')[1]
    area_dict['latitude'] = attributes.get('latitude')
    area_dict['longitude'] = attributes.get('longitude')
    df = pd.DataFrame(area_dict, index=[index])
    return df
    

def get_t_hum_monitoring_data(bmkg,last_date): 
    areas = bmkg.select('area[type="land"]')
    res_df = pd.DataFrame()
    for i,area in enumerate(areas) : 
        res_detail = get_temp_hum_data(area,i,last_date)
        area_detail = get_area_detail(area,i,last_date)
        if not res_df.empty: 
            df = pd.concat((area_detail,res_detail),axis=1)
            res_df = pd.concat((res_df,df))
        else : 
            df = pd.concat((area_detail,res_detail),axis=1)
            res_df = df
    return res_df


def read_xml(d): 
        with open(f"./supp_datasets/{d}") as xml : 
            date_obj = datetime.strptime(d,"bmkg-%Y%m%d.xml").date()
            last_date = date_obj.strftime("%Y%m%d")
            bs = BeautifulSoup(xml,features="xml")
            new_data = get_t_hum_monitoring_data(bs,last_date)
        return (new_data,date_obj)

def load_data(d):  #date -> 1 , name -> 3, tmax->6 , tmin->7, humax->8, humin->9
    print(data[3],data[6])
    df,date_obj = read_xml(d)
    for data in df.itertuples(): 
        city = City.objects.get(name=data[3])
        Temp.objects.create(city=city,date=date_obj,tmax=data[6],tmin=data[7],humax=data[8],humin=data[9])
    print("data has been loaded into DB")


